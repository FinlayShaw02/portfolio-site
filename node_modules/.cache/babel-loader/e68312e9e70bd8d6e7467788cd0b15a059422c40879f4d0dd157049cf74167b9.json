{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shawj\\\\Desktop\\\\ALL\\\\portfolio\\\\src\\\\components\\\\SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasSize = {\n  width: 400,\n  height: 400\n};\nconst scale = 20;\nconst rows = canvasSize.height / scale;\nconst columns = canvasSize.width / scale;\nconst SnakeGame = ({\n  isDark\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const snakeRef = useRef([{\n    x: 10,\n    y: 10\n  }, {\n    x: 9,\n    y: 10\n  }, {\n    x: 8,\n    y: 10\n  }]);\n  const dirRef = useRef({\n    x: 1,\n    y: 0\n  });\n  const foodRef = useRef(randomFood());\n  const intervalRef = useRef(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  function randomFood() {\n    const snake = snakeRef.current;\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * columns),\n        y: Math.floor(Math.random() * rows)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  }\n  const resetGame = () => {\n    snakeRef.current = [{\n      x: 10,\n      y: 10\n    }, {\n      x: 9,\n      y: 10\n    }, {\n      x: 8,\n      y: 10\n    }];\n    dirRef.current = {\n      x: 1,\n      y: 0\n    };\n    foodRef.current = randomFood();\n    setScore(0);\n    setGameOver(false);\n    setIsPaused(false);\n  };\n  const getSpeed = () => {\n    const length = snakeRef.current.length;\n    if (length < 8) return 200;\n    if (length < 12) return 180;\n    if (length < 16) return 160;\n    if (length < 20) return 140;\n    if (length < 25) return 120;\n    return 100;\n  };\n  const moveSnake = () => {\n    if (isPaused || gameOver) return;\n    const snake = [...snakeRef.current];\n    const head = {\n      ...snake[0]\n    };\n    head.x += dirRef.current.x;\n    head.y += dirRef.current.y;\n    const hitWall = head.x < 0 || head.x >= columns || head.y < 0 || head.y >= rows;\n    const hitSelf = snake.some(segment => segment.x === head.x && segment.y === head.y);\n    if (hitWall || hitSelf) {\n      setGameOver(true);\n      clearInterval(intervalRef.current);\n      return;\n    }\n    snake.unshift(head);\n    if (head.x === foodRef.current.x && head.y === foodRef.current.y) {\n      foodRef.current = randomFood();\n      const newScore = snake.length - 3;\n      setScore(newScore);\n      if (newScore > highScore) {\n        setHighScore(newScore);\n        localStorage.setItem(\"snakeHighScore\", newScore.toString());\n      }\n    } else {\n      snake.pop();\n    }\n    snakeRef.current = snake;\n    drawGame(ctxRef.current);\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(moveSnake, getSpeed());\n  };\n  const drawGame = ctx => {\n    ctx.clearRect(0, 0, columns, rows);\n    ctx.fillStyle = \"#f43f5e\"; // food\n    ctx.fillRect(foodRef.current.x, foodRef.current.y, 1, 1);\n    ctx.fillStyle = \"#10b981\"; // snake\n    snakeRef.current.forEach(segment => {\n      ctx.fillRect(segment.x, segment.y, 1, 1);\n    });\n  };\n  useEffect(() => {\n    const stored = localStorage.getItem(\"snakeHighScore\");\n    if (stored) {\n      setHighScore(parseInt(stored));\n    }\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.setTransform(scale, 0, 0, scale, 0, 0);\n    ctxRef.current = ctx;\n    drawGame(ctx);\n    if (!gameOver) {\n      intervalRef.current = setInterval(moveSnake, getSpeed());\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [gameOver]);\n  useEffect(() => {\n    const handleKey = e => {\n      const key = e.key.toLowerCase();\n      const {\n        x,\n        y\n      } = dirRef.current;\n      if (key === \"p\") {\n        setIsPaused(prev => !prev);\n        return;\n      }\n      switch (key) {\n        case \"arrowup\":\n        case \"w\":\n          if (y !== 1) dirRef.current = {\n            x: 0,\n            y: -1\n          };\n          break;\n        case \"arrowdown\":\n        case \"s\":\n          if (y !== -1) dirRef.current = {\n            x: 0,\n            y: 1\n          };\n          break;\n        case \"arrowleft\":\n        case \"a\":\n          if (x !== 1) dirRef.current = {\n            x: -1,\n            y: 0\n          };\n          break;\n        case \"arrowright\":\n        case \"d\":\n          if (x !== -1) dirRef.current = {\n            x: 1,\n            y: 0\n          };\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener(\"keydown\", handleKey);\n    return () => window.removeEventListener(\"keydown\", handleKey);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-full px-4 pb-10 gap-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-full max-w-md rounded-lg border p-4 shadow-lg transition-colors duration-300 ${isDark ? \"bg-slate-800 text-white border-slate-700\" : \"bg-white text-black border-gray-300\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-sm mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"High Score: \", highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), isPaused && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-500 text-center text-sm mb-2\",\n        children: \"\\u23F8\\uFE0F Paused \\u2014 press 'P' or click resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center font-bold text-sm mb-2\",\n        children: [\"\\uD83D\\uDC80 Game Over \\u2014 Final Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: canvasSize.width,\n          height: canvasSize.height,\n          style: {\n            width: canvasSize.width,\n            height: canvasSize.height,\n            imageRendering: \"pixelated\"\n          },\n          className: \"border border-slate-700 bg-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-3 mt-4\",\n        children: gameOver ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          className: \"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\",\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPaused(prev => !prev),\n          className: \"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\",\n          children: isPaused ? \"Resume\" : \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md rounded-lg border p-4 text-sm \\r bg-white text-black \\r dark:bg-slate-800 dark:text-white dark:border-slate-700 transition-colors duration-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-base mb-1 text-green-600 dark:text-green-400\",\n        children: \"About Snake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Navigate the snake to eat food and grow longer. Avoid running into the walls or yourself.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Controls:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), \" Arrow keys or WASD to move, \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n          children: \"P\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 88\n        }, this), \" to pause/resume.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Objective:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), \" Grow the longest snake you can!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"Kt0/h/Bvx/zmB5R/ioZoDN4djFg=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","canvasSize","width","height","scale","rows","columns","SnakeGame","isDark","_s","canvasRef","ctxRef","snakeRef","x","y","dirRef","foodRef","randomFood","intervalRef","gameOver","setGameOver","score","setScore","highScore","setHighScore","isPaused","setIsPaused","snake","current","newFood","Math","floor","random","some","segment","resetGame","getSpeed","length","moveSnake","head","hitWall","hitSelf","clearInterval","unshift","newScore","localStorage","setItem","toString","pop","drawGame","setInterval","ctx","clearRect","fillStyle","fillRect","forEach","stored","getItem","parseInt","getContext","setTransform","handleKey","e","key","toLowerCase","prev","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","imageRendering","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shawj/Desktop/ALL/portfolio/src/components/SnakeGame.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst canvasSize = { width: 400, height: 400 };\r\nconst scale = 20;\r\nconst rows = canvasSize.height / scale;\r\nconst columns = canvasSize.width / scale;\r\n\r\nconst SnakeGame = ({ isDark }) => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const snakeRef = useRef([\r\n    { x: 10, y: 10 },\r\n    { x: 9, y: 10 },\r\n    { x: 8, y: 10 },\r\n  ]);\r\n  const dirRef = useRef({ x: 1, y: 0 });\r\n  const foodRef = useRef(randomFood());\r\n  const intervalRef = useRef(null);\r\n\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n\r\n  function randomFood() {\r\n  const snake = snakeRef.current;\r\n  let newFood;\r\n\r\n  do {\r\n    newFood = {\r\n      x: Math.floor(Math.random() * columns),\r\n      y: Math.floor(Math.random() * rows),\r\n    };\r\n  } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\r\n\r\n  return newFood;\r\n}\r\n\r\n  const resetGame = () => {\r\n    snakeRef.current = [\r\n      { x: 10, y: 10 },\r\n      { x: 9, y: 10 },\r\n      { x: 8, y: 10 },\r\n    ];\r\n    dirRef.current = { x: 1, y: 0 };\r\n    foodRef.current = randomFood();\r\n    setScore(0);\r\n    setGameOver(false);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const getSpeed = () => {\r\n    const length = snakeRef.current.length;\r\n    if (length < 8) return 200;\r\n    if (length < 12) return 180;\r\n    if (length < 16) return 160;\r\n    if (length < 20) return 140;\r\n    if (length < 25) return 120;\r\n    return 100;\r\n  };\r\n\r\n  const moveSnake = () => {\r\n    if (isPaused || gameOver) return;\r\n\r\n    const snake = [...snakeRef.current];\r\n    const head = { ...snake[0] };\r\n    head.x += dirRef.current.x;\r\n    head.y += dirRef.current.y;\r\n\r\n    const hitWall = head.x < 0 || head.x >= columns || head.y < 0 || head.y >= rows;\r\n    const hitSelf = snake.some(segment => segment.x === head.x && segment.y === head.y);\r\n\r\n    if (hitWall || hitSelf) {\r\n      setGameOver(true);\r\n      clearInterval(intervalRef.current);\r\n      return;\r\n    }\r\n\r\n    snake.unshift(head);\r\n\r\n    if (head.x === foodRef.current.x && head.y === foodRef.current.y) {\r\n      foodRef.current = randomFood();\r\n      const newScore = snake.length - 3;\r\n      setScore(newScore);\r\n      if (newScore > highScore) {\r\n        setHighScore(newScore);\r\n        localStorage.setItem(\"snakeHighScore\", newScore.toString());\r\n      }\r\n    } else {\r\n      snake.pop();\r\n    }\r\n\r\n    snakeRef.current = snake;\r\n    drawGame(ctxRef.current);\r\n\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = setInterval(moveSnake, getSpeed());\r\n  };\r\n\r\n  const drawGame = (ctx) => {\r\n    ctx.clearRect(0, 0, columns, rows);\r\n    ctx.fillStyle = \"#f43f5e\"; // food\r\n    ctx.fillRect(foodRef.current.x, foodRef.current.y, 1, 1);\r\n    ctx.fillStyle = \"#10b981\"; // snake\r\n    snakeRef.current.forEach(segment => {\r\n      ctx.fillRect(segment.x, segment.y, 1, 1);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"snakeHighScore\");\r\n    if (stored) {\r\n      setHighScore(parseInt(stored));\r\n    }\r\n\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.setTransform(scale, 0, 0, scale, 0, 0);\r\n    ctxRef.current = ctx;\r\n    drawGame(ctx);\r\n\r\n    if (!gameOver) {\r\n      intervalRef.current = setInterval(moveSnake, getSpeed());\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [gameOver]);\r\n\r\n  useEffect(() => {\r\n    const handleKey = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      const { x, y } = dirRef.current;\r\n\r\n      if (key === \"p\") {\r\n        setIsPaused(prev => !prev);\r\n        return;\r\n      }\r\n\r\n      switch (key) {\r\n        case \"arrowup\":\r\n        case \"w\":\r\n          if (y !== 1) dirRef.current = { x: 0, y: -1 };\r\n          break;\r\n        case \"arrowdown\":\r\n        case \"s\":\r\n          if (y !== -1) dirRef.current = { x: 0, y: 1 };\r\n          break;\r\n        case \"arrowleft\":\r\n        case \"a\":\r\n          if (x !== 1) dirRef.current = { x: -1, y: 0 };\r\n          break;\r\n        case \"arrowright\":\r\n        case \"d\":\r\n          if (x !== -1) dirRef.current = { x: 1, y: 0 };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKey);\r\n    return () => window.removeEventListener(\"keydown\", handleKey);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full px-4 pb-10 gap-y-6\">\r\n\r\n      {/* GAME BOX */}\r\n      <div className={`w-full max-w-md rounded-lg border p-4 shadow-lg transition-colors duration-300 ${\r\n  isDark ? \"bg-slate-800 text-white border-slate-700\" : \"bg-white text-black border-gray-300\"\r\n}`}>\r\n\r\n\r\n        {/* Score & High Score */}\r\n        <div className=\"flex justify-between text-sm mb-2\">\r\n          <span>Score: {score}</span>\r\n          <span>High Score: {highScore}</span>\r\n        </div>\r\n\r\n        {/* Pause / Game Over */}\r\n        {isPaused && (\r\n          <p className=\"text-yellow-500 text-center text-sm mb-2\">⏸️ Paused — press 'P' or click resume</p>\r\n        )}\r\n        {gameOver && (\r\n          <p className=\"text-red-500 text-center font-bold text-sm mb-2\">💀 Game Over — Final Score: {score}</p>\r\n        )}\r\n\r\n        {/* Canvas */}\r\n        <div className=\"flex justify-center\">\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={canvasSize.width}\r\n            height={canvasSize.height}\r\n            style={{ width: canvasSize.width, height: canvasSize.height, imageRendering: \"pixelated\" }}\r\n            className=\"border border-slate-700 bg-black\"\r\n          />\r\n        </div>\r\n\r\n        {/* Buttons */}\r\n        <div className=\"flex justify-center gap-3 mt-4\">\r\n          {gameOver ? (\r\n            <button\r\n              onClick={resetGame}\r\n              className=\"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\"\r\n            >\r\n              Restart\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => setIsPaused(prev => !prev)}\r\n              className=\"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\"\r\n            >\r\n              {isPaused ? \"Resume\" : \"Pause\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ABOUT BOX */}\r\n      <div className=\"w-full max-w-md rounded-lg border p-4 text-sm \r\n  bg-white text-black \r\n  dark:bg-slate-800 dark:text-white dark:border-slate-700 transition-colors duration-300\">\r\n        <p className=\"font-semibold text-base mb-1 text-green-600 dark:text-green-400\">About Snake</p>\r\n        <p>\r\n          Navigate the snake to eat food and grow longer. Avoid running into the walls or yourself.\r\n        </p>\r\n        <p className=\"mt-2\">\r\n          <span className=\"font-semibold\">Controls:</span> Arrow keys or WASD to move, <kbd>P</kbd> to pause/resume.\r\n        </p>\r\n        <p>\r\n          <span className=\"font-semibold\">Objective:</span> Grow the longest snake you can!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnakeGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}