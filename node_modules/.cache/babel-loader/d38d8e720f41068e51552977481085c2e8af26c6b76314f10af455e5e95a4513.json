{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shawj\\\\Desktop\\\\ALL\\\\portfolio\\\\src\\\\components\\\\SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasSize = {\n  width: 400,\n  height: 400\n};\nconst scale = 20;\nconst rows = canvasSize.height / scale;\nconst columns = canvasSize.width / scale;\nconst SnakeGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const snakeRef = useRef([{\n    x: 10,\n    y: 10\n  }, {\n    x: 9,\n    y: 10\n  }, {\n    x: 8,\n    y: 10\n  }]);\n  const dirRef = useRef({\n    x: 1,\n    y: 0\n  });\n  const foodRef = useRef(randomFood());\n  const intervalRef = useRef(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  function randomFood() {\n    return {\n      x: Math.floor(Math.random() * columns),\n      y: Math.floor(Math.random() * rows)\n    };\n  }\n  const resetGame = () => {\n    snakeRef.current = [{\n      x: 10,\n      y: 10\n    }, {\n      x: 9,\n      y: 10\n    }, {\n      x: 8,\n      y: 10\n    }];\n    dirRef.current = {\n      x: 1,\n      y: 0\n    };\n    foodRef.current = randomFood();\n    setScore(0);\n    setGameOver(false);\n    setIsPaused(false);\n  };\n  const getSpeed = () => {\n    const length = snakeRef.current.length;\n    if (length < 8) return 200;\n    if (length < 12) return 180;\n    if (length < 16) return 160;\n    if (length < 20) return 140;\n    if (length < 25) return 120;\n    return 100;\n  };\n  const moveSnake = () => {\n    if (isPaused || gameOver) return;\n    const snake = [...snakeRef.current];\n    const head = {\n      ...snake[0]\n    };\n    head.x += dirRef.current.x;\n    head.y += dirRef.current.y;\n    const hitWall = head.x < 0 || head.x >= columns || head.y < 0 || head.y >= rows;\n    const hitSelf = snake.some(segment => segment.x === head.x && segment.y === head.y);\n    if (hitWall || hitSelf) {\n      setGameOver(true);\n      clearInterval(intervalRef.current);\n      return;\n    }\n    snake.unshift(head);\n    if (head.x === foodRef.current.x && head.y === foodRef.current.y) {\n      foodRef.current = randomFood();\n      const newScore = snake.length - 3;\n      setScore(newScore);\n      if (newScore > highScore) {\n        setHighScore(newScore);\n        localStorage.setItem(\"snakeHighScore\", newScore.toString());\n      }\n    } else {\n      snake.pop();\n    }\n    snakeRef.current = snake;\n    drawGame(ctxRef.current);\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(moveSnake, getSpeed());\n  };\n  const drawGame = ctx => {\n    ctx.clearRect(0, 0, columns, rows);\n    ctx.fillStyle = \"#f43f5e\";\n    ctx.fillRect(foodRef.current.x, foodRef.current.y, 1, 1);\n    ctx.fillStyle = \"#10b981\";\n    snakeRef.current.forEach(segment => {\n      ctx.fillRect(segment.x, segment.y, 1, 1);\n    });\n  };\n  useEffect(() => {\n    const stored = localStorage.getItem(\"snakeHighScore\");\n    if (stored) {\n      setHighScore(parseInt(stored));\n    }\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.setTransform(scale, 0, 0, scale, 0, 0);\n    ctxRef.current = ctx;\n    drawGame(ctx);\n    if (!gameOver) {\n      intervalRef.current = setInterval(moveSnake, getSpeed());\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [gameOver]);\n  useEffect(() => {\n    const handleKey = e => {\n      const key = e.key.toLowerCase();\n      const {\n        x,\n        y\n      } = dirRef.current;\n      if (key === \"p\") {\n        setIsPaused(prev => !prev);\n        return;\n      }\n      switch (key) {\n        case \"arrowup\":\n        case \"w\":\n          if (y !== 1) dirRef.current = {\n            x: 0,\n            y: -1\n          };\n          break;\n        case \"arrowdown\":\n        case \"s\":\n          if (y !== -1) dirRef.current = {\n            x: 0,\n            y: 1\n          };\n          break;\n        case \"arrowleft\":\n        case \"a\":\n          if (x !== 1) dirRef.current = {\n            x: -1,\n            y: 0\n          };\n          break;\n        case \"arrowright\":\n        case \"d\":\n          if (x !== -1) dirRef.current = {\n            x: 1,\n            y: 0\n          };\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener(\"keydown\", handleKey);\n    return () => window.removeEventListener(\"keydown\", handleKey);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-full px-4 pb-10 gap-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md rounded-lg border p-4 shadow-lg bg-white dark:bg-slate-800 dark:border-slate-700 dark:text-gray-200 text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-sm mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"High Score: \", highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), isPaused && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-500 text-center text-sm mb-2\",\n        children: \"\\u23F8\\uFE0F Paused \\u2014 press 'P' or click resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center font-bold text-sm mb-2\",\n        children: [\"\\uD83D\\uDC80 Game Over \\u2014 Final Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: canvasSize.width,\n          height: canvasSize.height,\n          style: {\n            imageRendering: \"pixelated\"\n          },\n          className: \"border border-slate-600 bg-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-3 mt-4\",\n        children: gameOver ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          className: \"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\",\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPaused(prev => !prev),\n          className: \"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\",\n          children: isPaused ? \"Resume\" : \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md rounded-lg border p-4 text-sm bg-white text-black dark:bg-slate-800 dark:text-gray-200 dark:border-slate-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-base mb-1 text-green-600 dark:text-green-400\",\n        children: \"About Snake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Navigate the snake to eat food and grow longer. Avoid running into the walls or yourself.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Controls:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), \" Arrow keys or WASD to move, \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n          children: \"P\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 86\n        }, this), \" to pause/resume.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Objective:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this), \" Grow the longest snake you can!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 3\n  }, this);\n};\n_s(SnakeGame, \"Kt0/h/Bvx/zmB5R/ioZoDN4djFg=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","canvasSize","width","height","scale","rows","columns","SnakeGame","_s","canvasRef","ctxRef","snakeRef","x","y","dirRef","foodRef","randomFood","intervalRef","gameOver","setGameOver","score","setScore","highScore","setHighScore","isPaused","setIsPaused","Math","floor","random","resetGame","current","getSpeed","length","moveSnake","snake","head","hitWall","hitSelf","some","segment","clearInterval","unshift","newScore","localStorage","setItem","toString","pop","drawGame","setInterval","ctx","clearRect","fillStyle","fillRect","forEach","stored","getItem","parseInt","getContext","setTransform","handleKey","e","key","toLowerCase","prev","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","imageRendering","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shawj/Desktop/ALL/portfolio/src/components/SnakeGame.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst canvasSize = { width: 400, height: 400 };\r\nconst scale = 20;\r\nconst rows = canvasSize.height / scale;\r\nconst columns = canvasSize.width / scale;\r\n\r\nconst SnakeGame = () => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const snakeRef = useRef([\r\n    { x: 10, y: 10 },\r\n    { x: 9, y: 10 },\r\n    { x: 8, y: 10 },\r\n  ]);\r\n  const dirRef = useRef({ x: 1, y: 0 });\r\n  const foodRef = useRef(randomFood());\r\n  const intervalRef = useRef(null);\r\n\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n\r\n  function randomFood() {\r\n    return {\r\n      x: Math.floor(Math.random() * columns),\r\n      y: Math.floor(Math.random() * rows),\r\n    };\r\n  }\r\n\r\n  const resetGame = () => {\r\n    snakeRef.current = [\r\n      { x: 10, y: 10 },\r\n      { x: 9, y: 10 },\r\n      { x: 8, y: 10 },\r\n    ];\r\n    dirRef.current = { x: 1, y: 0 };\r\n    foodRef.current = randomFood();\r\n    setScore(0);\r\n    setGameOver(false);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const getSpeed = () => {\r\n    const length = snakeRef.current.length;\r\n    if (length < 8) return 200;\r\n    if (length < 12) return 180;\r\n    if (length < 16) return 160;\r\n    if (length < 20) return 140;\r\n    if (length < 25) return 120;\r\n    return 100;\r\n  };\r\n\r\n  const moveSnake = () => {\r\n    if (isPaused || gameOver) return;\r\n\r\n    const snake = [...snakeRef.current];\r\n    const head = { ...snake[0] };\r\n    head.x += dirRef.current.x;\r\n    head.y += dirRef.current.y;\r\n\r\n    const hitWall = head.x < 0 || head.x >= columns || head.y < 0 || head.y >= rows;\r\n    const hitSelf = snake.some(segment => segment.x === head.x && segment.y === head.y);\r\n\r\n    if (hitWall || hitSelf) {\r\n      setGameOver(true);\r\n      clearInterval(intervalRef.current);\r\n      return;\r\n    }\r\n\r\n    snake.unshift(head);\r\n\r\n    if (head.x === foodRef.current.x && head.y === foodRef.current.y) {\r\n      foodRef.current = randomFood();\r\n      const newScore = snake.length - 3;\r\n      setScore(newScore);\r\n      if (newScore > highScore) {\r\n        setHighScore(newScore);\r\n        localStorage.setItem(\"snakeHighScore\", newScore.toString());\r\n      }\r\n    } else {\r\n      snake.pop();\r\n    }\r\n\r\n    snakeRef.current = snake;\r\n    drawGame(ctxRef.current);\r\n\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = setInterval(moveSnake, getSpeed());\r\n  };\r\n\r\n  const drawGame = (ctx) => {\r\n    ctx.clearRect(0, 0, columns, rows);\r\n    ctx.fillStyle = \"#f43f5e\";\r\n    ctx.fillRect(foodRef.current.x, foodRef.current.y, 1, 1);\r\n    ctx.fillStyle = \"#10b981\";\r\n    snakeRef.current.forEach(segment => {\r\n      ctx.fillRect(segment.x, segment.y, 1, 1);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"snakeHighScore\");\r\n    if (stored) {\r\n      setHighScore(parseInt(stored));\r\n    }\r\n\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.setTransform(scale, 0, 0, scale, 0, 0);\r\n    ctxRef.current = ctx;\r\n    drawGame(ctx);\r\n\r\n    if (!gameOver) {\r\n      intervalRef.current = setInterval(moveSnake, getSpeed());\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [gameOver]);\r\n\r\n  useEffect(() => {\r\n    const handleKey = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      const { x, y } = dirRef.current;\r\n\r\n      if (key === \"p\") {\r\n        setIsPaused(prev => !prev);\r\n        return;\r\n      }\r\n\r\n      switch (key) {\r\n        case \"arrowup\":\r\n        case \"w\":\r\n          if (y !== 1) dirRef.current = { x: 0, y: -1 };\r\n          break;\r\n        case \"arrowdown\":\r\n        case \"s\":\r\n          if (y !== -1) dirRef.current = { x: 0, y: 1 };\r\n          break;\r\n        case \"arrowleft\":\r\n        case \"a\":\r\n          if (x !== 1) dirRef.current = { x: -1, y: 0 };\r\n          break;\r\n        case \"arrowright\":\r\n        case \"d\":\r\n          if (x !== -1) dirRef.current = { x: 1, y: 0 };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKey);\r\n    return () => window.removeEventListener(\"keydown\", handleKey);\r\n  }, []);\r\n\r\n  return (\r\n  <div className=\"flex flex-col items-center w-full px-4 pb-10 gap-y-6\">\r\n\r\n    {/* GAME BOX */}\r\n    <div className=\"w-full max-w-md rounded-lg border p-4 shadow-lg bg-white dark:bg-slate-800 dark:border-slate-700 dark:text-gray-200 text-black\">\r\n\r\n      {/* Score & High Score */}\r\n      <div className=\"flex justify-between text-sm mb-2\">\r\n        <span>Score: {score}</span>\r\n        <span>High Score: {highScore}</span>\r\n      </div>\r\n\r\n      {/* Pause / Game Over */}\r\n      {isPaused && (\r\n        <p className=\"text-yellow-500 text-center text-sm mb-2\">⏸️ Paused — press 'P' or click resume</p>\r\n      )}\r\n      {gameOver && (\r\n        <p className=\"text-red-500 text-center font-bold text-sm mb-2\">💀 Game Over — Final Score: {score}</p>\r\n      )}\r\n\r\n      {/* Canvas */}\r\n      <div className=\"flex justify-center\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={canvasSize.width}\r\n          height={canvasSize.height}\r\n          style={{ imageRendering: \"pixelated\" }}\r\n          className=\"border border-slate-600 bg-black\"\r\n        />\r\n      </div>\r\n\r\n      {/* Buttons */}\r\n      <div className=\"flex justify-center gap-3 mt-4\">\r\n        {gameOver ? (\r\n          <button\r\n            onClick={resetGame}\r\n            className=\"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\"\r\n          >\r\n            Restart\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => setIsPaused(prev => !prev)}\r\n            className=\"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600\"\r\n          >\r\n            {isPaused ? \"Resume\" : \"Pause\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n    {/* ABOUT BOX */}\r\n    <div className=\"w-full max-w-md rounded-lg border p-4 text-sm bg-white text-black dark:bg-slate-800 dark:text-gray-200 dark:border-slate-700\">\r\n      <p className=\"font-semibold text-base mb-1 text-green-600 dark:text-green-400\">About Snake</p>\r\n      <p>\r\n        Navigate the snake to eat food and grow longer. Avoid running into the walls or yourself.\r\n      </p>\r\n      <p className=\"mt-2\">\r\n        <span className=\"font-semibold\">Controls:</span> Arrow keys or WASD to move, <kbd>P</kbd> to pause/resume.\r\n      </p>\r\n      <p>\r\n        <span className=\"font-semibold\">Objective:</span> Grow the longest snake you can!\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default SnakeGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}