{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shawj\\\\Desktop\\\\ALL\\\\portfolio\\\\src\\\\components\\\\SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasSize = {\n  width: 400,\n  height: 400\n};\nconst scale = 20;\nconst rows = canvasSize.height / scale;\nconst columns = canvasSize.width / scale;\nconst SnakeGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Snake starts with 3 horizontal segments\n  const [snake, setSnake] = useState([{\n    x: 10,\n    y: 10\n  }, {\n    x: 9,\n    y: 10\n  }, {\n    x: 8,\n    y: 10\n  }]);\n\n  // Moving right by default\n  const [dir, setDir] = useState({\n    x: 1,\n    y: 0\n  });\n  const [food, setFood] = useState(randomFood());\n  const [gameOver, setGameOver] = useState(false);\n  function randomFood() {\n    return {\n      x: Math.floor(Math.random() * columns),\n      y: Math.floor(Math.random() * rows)\n    };\n  }\n  const resetGame = () => {\n    setSnake([{\n      x: 10,\n      y: 10\n    }, {\n      x: 9,\n      y: 10\n    }, {\n      x: 8,\n      y: 10\n    }]);\n    setDir({\n      x: 1,\n      y: 0\n    });\n    setFood(randomFood());\n    setGameOver(false);\n  };\n  const moveSnake = () => {\n    const newSnake = [...snake];\n    const head = {\n      ...newSnake[0]\n    };\n    head.x += dir.x;\n    head.y += dir.y;\n\n    // Wall or self collision\n    if (head.x < 0 || head.x >= columns || head.y < 0 || head.y >= rows || newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n      setGameOver(true);\n      return;\n    }\n    newSnake.unshift(head);\n\n    // Eat food\n    if (head.x === food.x && head.y === food.y) {\n      setFood(randomFood());\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  };\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(scale, 0, 0, scale, 0, 0);\n    const interval = setInterval(() => {\n      if (!gameOver) {\n        moveSnake();\n        drawGame(context);\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  });\n  const drawGame = ctx => {\n    ctx.clearRect(0, 0, columns, rows);\n\n    // Food\n    ctx.fillStyle = \"#f43f5e\";\n    ctx.fillRect(food.x, food.y, 1, 1);\n\n    // Snake\n    ctx.fillStyle = \"#10b981\";\n    snake.forEach(segment => ctx.fillRect(segment.x, segment.y, 1, 1));\n  };\n  useEffect(() => {\n    const handleKey = e => {\n      switch (e.key) {\n        case \"ArrowUp\":\n          if (dir.y !== 1) setDir({\n            x: 0,\n            y: -1\n          });\n          break;\n        case \"ArrowDown\":\n          if (dir.y !== -1) setDir({\n            x: 0,\n            y: 1\n          });\n          break;\n        case \"ArrowLeft\":\n          if (dir.x !== 1) setDir({\n            x: -1,\n            y: 0\n          });\n          break;\n        case \"ArrowRight\":\n          if (dir.x !== -1) setDir({\n            x: 1,\n            y: 0\n          });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener(\"keydown\", handleKey);\n    return () => window.removeEventListener(\"keydown\", handleKey);\n  }, [dir]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center gap-4\",\n    children: [gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 font-bold text-lg\",\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      className: \"border border-slate-600 bg-black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      className: \"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600 mt-4\",\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"cM3v32GzmU8fCNrbQIUBl/v/ukY=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","canvasSize","width","height","scale","rows","columns","SnakeGame","_s","canvasRef","snake","setSnake","x","y","dir","setDir","food","setFood","randomFood","gameOver","setGameOver","Math","floor","random","resetGame","moveSnake","newSnake","head","some","segment","unshift","pop","context","current","getContext","setTransform","interval","setInterval","drawGame","clearInterval","ctx","clearRect","fillStyle","fillRect","forEach","handleKey","e","key","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shawj/Desktop/ALL/portfolio/src/components/SnakeGame.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst canvasSize = { width: 400, height: 400 };\r\nconst scale = 20;\r\nconst rows = canvasSize.height / scale;\r\nconst columns = canvasSize.width / scale;\r\n\r\nconst SnakeGame = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  // Snake starts with 3 horizontal segments\r\n  const [snake, setSnake] = useState([\r\n    { x: 10, y: 10 },\r\n    { x: 9, y: 10 },\r\n    { x: 8, y: 10 },\r\n  ]);\r\n\r\n  // Moving right by default\r\n  const [dir, setDir] = useState({ x: 1, y: 0 });\r\n  const [food, setFood] = useState(randomFood());\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  function randomFood() {\r\n    return {\r\n      x: Math.floor(Math.random() * columns),\r\n      y: Math.floor(Math.random() * rows),\r\n    };\r\n  }\r\n\r\n  const resetGame = () => {\r\n    setSnake([\r\n      { x: 10, y: 10 },\r\n      { x: 9, y: 10 },\r\n      { x: 8, y: 10 },\r\n    ]);\r\n    setDir({ x: 1, y: 0 });\r\n    setFood(randomFood());\r\n    setGameOver(false);\r\n  };\r\n\r\n  const moveSnake = () => {\r\n    const newSnake = [...snake];\r\n    const head = { ...newSnake[0] };\r\n    head.x += dir.x;\r\n    head.y += dir.y;\r\n\r\n    // Wall or self collision\r\n    if (\r\n      head.x < 0 || head.x >= columns ||\r\n      head.y < 0 || head.y >= rows ||\r\n      newSnake.some(segment => segment.x === head.x && segment.y === head.y)\r\n    ) {\r\n      setGameOver(true);\r\n      return;\r\n    }\r\n\r\n    newSnake.unshift(head);\r\n\r\n    // Eat food\r\n    if (head.x === food.x && head.y === food.y) {\r\n      setFood(randomFood());\r\n    } else {\r\n      newSnake.pop();\r\n    }\r\n\r\n    setSnake(newSnake);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n    context.setTransform(scale, 0, 0, scale, 0, 0);\r\n\r\n    const interval = setInterval(() => {\r\n      if (!gameOver) {\r\n        moveSnake();\r\n        drawGame(context);\r\n      }\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  const drawGame = (ctx) => {\r\n    ctx.clearRect(0, 0, columns, rows);\r\n\r\n    // Food\r\n    ctx.fillStyle = \"#f43f5e\";\r\n    ctx.fillRect(food.x, food.y, 1, 1);\r\n\r\n    // Snake\r\n    ctx.fillStyle = \"#10b981\";\r\n    snake.forEach(segment => ctx.fillRect(segment.x, segment.y, 1, 1));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKey = (e) => {\r\n      switch (e.key) {\r\n        case \"ArrowUp\":\r\n          if (dir.y !== 1) setDir({ x: 0, y: -1 });\r\n          break;\r\n        case \"ArrowDown\":\r\n          if (dir.y !== -1) setDir({ x: 0, y: 1 });\r\n          break;\r\n        case \"ArrowLeft\":\r\n          if (dir.x !== 1) setDir({ x: -1, y: 0 });\r\n          break;\r\n        case \"ArrowRight\":\r\n          if (dir.x !== -1) setDir({ x: 1, y: 0 });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKey);\r\n    return () => window.removeEventListener(\"keydown\", handleKey);\r\n  }, [dir]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center gap-4\">\r\n      {gameOver && (\r\n        <p className=\"text-red-500 font-bold text-lg\">Game Over</p>\r\n      )}\r\n\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={canvasSize.width}\r\n        height={canvasSize.height}\r\n        className=\"border border-slate-600 bg-black\"\r\n      />\r\n\r\n      {gameOver && (\r\n        <button\r\n          onClick={resetGame}\r\n          className=\"bg-slate-700 text-white px-4 py-1 rounded hover:bg-slate-600 mt-4\"\r\n        >\r\n          Restart\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnakeGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}