{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shawj\\\\Desktop\\\\ALL\\\\portfolio\\\\src\\\\components\\\\TetrisGame.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLS = 10;\nconst ROWS = 20;\nconst BLOCK_SIZE = 30;\nconst canvasWidth = COLS * BLOCK_SIZE;\nconst canvasHeight = ROWS * BLOCK_SIZE;\nconst TETROMINOES = {\n  I: {\n    shape: [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    color: \"#06b6d4\"\n  },\n  J: {\n    shape: [[1, 0, 0], [1, 1, 1], [0, 0, 0]],\n    color: \"#3b82f6\"\n  },\n  L: {\n    shape: [[0, 0, 1], [1, 1, 1], [0, 0, 0]],\n    color: \"#f97316\"\n  },\n  O: {\n    shape: [[1, 1], [1, 1]],\n    color: \"#facc15\"\n  },\n  S: {\n    shape: [[0, 1, 1], [1, 1, 0], [0, 0, 0]],\n    color: \"#22c55e\"\n  },\n  T: {\n    shape: [[0, 1, 0], [1, 1, 1], [0, 0, 0]],\n    color: \"#a855f7\"\n  },\n  Z: {\n    shape: [[1, 1, 0], [0, 1, 1], [0, 0, 0]],\n    color: \"#ef4444\"\n  }\n};\nconst randomTetromino = () => {\n  const keys = Object.keys(TETROMINOES);\n  const rand = keys[Math.floor(Math.random() * keys.length)];\n  return {\n    ...TETROMINOES[rand],\n    x: 3,\n    y: 0\n  };\n};\nconst rotateMatrix = matrix => matrix[0].map((_, i) => matrix.map(row => row[i]).reverse());\nconst isValidMove = (shape, grid, offsetX, offsetY) => {\n  for (let y = 0; y < shape.length; y++) {\n    for (let x = 0; x < shape[y].length; x++) {\n      if (shape[y][x]) {\n        const newY = y + offsetY;\n        const newX = x + offsetX;\n        if (newY >= ROWS || newX < 0 || newX >= COLS || grid[newY] && grid[newY][newX]) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n};\nconst mergeTetromino = (grid, tetromino) => {\n  const newGrid = grid.map(row => [...row]);\n  const {\n    shape,\n    x,\n    y\n  } = tetromino;\n  shape.forEach((row, dy) => {\n    row.forEach((val, dx) => {\n      if (val && y + dy < ROWS && x + dx >= 0) {\n        newGrid[y + dy][x + dx] = 1;\n      }\n    });\n  });\n  return newGrid;\n};\nconst clearLines = grid => {\n  const newGrid = grid.filter(row => row.some(cell => cell === 0));\n  const linesCleared = ROWS - newGrid.length;\n  while (newGrid.length < ROWS) newGrid.unshift(Array(COLS).fill(0));\n  return {\n    grid: newGrid,\n    linesCleared\n  };\n};\nconst TetrisGame = ({\n  isDark\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [grid, setGrid] = useState(Array.from({\n    length: ROWS\n  }, () => Array(COLS).fill(0)));\n  const [activeBlock, setActiveBlock] = useState(randomTetromino());\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const draw = ctx => {\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    for (let y = 0; y < ROWS; y++) {\n      for (let x = 0; x < COLS; x++) {\n        if (grid[y][x]) {\n          ctx.fillStyle = \"#38bdf8\";\n          ctx.fillRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n          ctx.strokeStyle = \"#1e3a8a\";\n          ctx.strokeRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n        }\n      }\n    }\n    const {\n      shape,\n      x,\n      y,\n      color\n    } = activeBlock;\n    shape.forEach((row, dy) => {\n      row.forEach((val, dx) => {\n        if (val) {\n          ctx.fillStyle = color;\n          ctx.fillRect((x + dx) * BLOCK_SIZE, (y + dy) * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n          ctx.strokeStyle = \"#1e3a8a\";\n          ctx.strokeRect((x + dx) * BLOCK_SIZE, (y + dy) * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n        }\n      });\n    });\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    let lastTime = 0;\n    let dropInterval = 500;\n    let dropCounter = 0;\n    const update = (time = 0) => {\n      const deltaTime = time - lastTime;\n      lastTime = time;\n      dropCounter += deltaTime;\n      if (isRunning && !isPaused && dropCounter > dropInterval) {\n        const moved = {\n          ...activeBlock,\n          y: activeBlock.y + 1\n        };\n        if (isValidMove(moved.shape, grid, moved.x, moved.y)) {\n          setActiveBlock(moved);\n        } else {\n          const merged = mergeTetromino(grid, activeBlock);\n          const {\n            grid: cleared\n          } = clearLines(merged);\n          setGrid(cleared);\n          setActiveBlock(randomTetromino());\n        }\n        dropCounter = 0;\n      }\n      draw(ctx);\n      requestAnimationFrame(update);\n    };\n    requestAnimationFrame(update);\n  }, [isRunning, isPaused, activeBlock, grid]);\n  useEffect(() => {\n    const handleKey = e => {\n      if (!isRunning || isPaused) return;\n      let moved = {\n        ...activeBlock\n      };\n      if (e.key === \"ArrowLeft\" || e.key.toLowerCase() === \"a\") moved.x--;else if (e.key === \"ArrowRight\" || e.key.toLowerCase() === \"d\") moved.x++;else if (e.key === \"ArrowDown\" || e.key.toLowerCase() === \"s\") moved.y++;else if (e.key === \"ArrowUp\" || e.key.toLowerCase() === \"w\") {\n        const rotated = rotateMatrix(activeBlock.shape);\n        if (isValidMove(rotated, grid, activeBlock.x, activeBlock.y)) {\n          setActiveBlock({\n            ...activeBlock,\n            shape: rotated\n          });\n          return;\n        }\n      }\n      if (isValidMove(moved.shape, grid, moved.x, moved.y)) setActiveBlock(moved);\n    };\n    window.addEventListener(\"keydown\", handleKey);\n    return () => window.removeEventListener(\"keydown\", handleKey);\n  }, [isRunning, isPaused, activeBlock, grid]);\n  const handleStart = () => {\n    setGrid(Array.from({\n      length: ROWS\n    }, () => Array(COLS).fill(0)));\n    setActiveBlock(randomTetromino());\n    setIsRunning(true);\n    setIsPaused(false);\n  };\n  const handlePause = () => {\n    if (isRunning) setIsPaused(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-full px-4 pb-10 gap-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 flex-wrap justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        className: `px-2 py-1 rounded-md border text-white ${isRunning ? \"bg-slate-600\" : \"bg-green-600\"}`,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePause,\n        disabled: !isRunning,\n        className: `px-2 py-1 rounded-md border text-white ${isPaused ? \"bg-yellow-600\" : isDark ? \"bg-blue-600\" : \"bg-slate-600\"}`,\n        children: isPaused ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      className: \"border border-slate-700 bg-black\",\n      style: {\n        imageRendering: \"pixelated\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(TetrisGame, \"Pid/R4WTnveesdJnmmdPwNm0Ta0=\");\n_c = TetrisGame;\nexport default TetrisGame;\nvar _c;\n$RefreshReg$(_c, \"TetrisGame\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","COLS","ROWS","BLOCK_SIZE","canvasWidth","canvasHeight","TETROMINOES","I","shape","color","J","L","O","S","T","Z","randomTetromino","keys","Object","rand","Math","floor","random","length","x","y","rotateMatrix","matrix","map","_","i","row","reverse","isValidMove","grid","offsetX","offsetY","newY","newX","mergeTetromino","tetromino","newGrid","forEach","dy","val","dx","clearLines","filter","some","cell","linesCleared","unshift","Array","fill","TetrisGame","isDark","_s","canvasRef","setGrid","from","activeBlock","setActiveBlock","isRunning","setIsRunning","isPaused","setIsPaused","draw","ctx","clearRect","fillStyle","fillRect","strokeStyle","strokeRect","canvas","current","getContext","lastTime","dropInterval","dropCounter","update","time","deltaTime","moved","merged","cleared","requestAnimationFrame","handleKey","e","key","toLowerCase","rotated","window","addEventListener","removeEventListener","handleStart","handlePause","prev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","ref","width","height","style","imageRendering","_c","$RefreshReg$"],"sources":["C:/Users/shawj/Desktop/ALL/portfolio/src/components/TetrisGame.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst COLS = 10;\r\nconst ROWS = 20;\r\nconst BLOCK_SIZE = 30;\r\nconst canvasWidth = COLS * BLOCK_SIZE;\r\nconst canvasHeight = ROWS * BLOCK_SIZE;\r\n\r\nconst TETROMINOES = {\r\n  I: { shape: [[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]], color: \"#06b6d4\" },\r\n  J: { shape: [[1,0,0],[1,1,1],[0,0,0]], color: \"#3b82f6\" },\r\n  L: { shape: [[0,0,1],[1,1,1],[0,0,0]], color: \"#f97316\" },\r\n  O: { shape: [[1,1],[1,1]], color: \"#facc15\" },\r\n  S: { shape: [[0,1,1],[1,1,0],[0,0,0]], color: \"#22c55e\" },\r\n  T: { shape: [[0,1,0],[1,1,1],[0,0,0]], color: \"#a855f7\" },\r\n  Z: { shape: [[1,1,0],[0,1,1],[0,0,0]], color: \"#ef4444\" },\r\n};\r\n\r\nconst randomTetromino = () => {\r\n  const keys = Object.keys(TETROMINOES);\r\n  const rand = keys[Math.floor(Math.random() * keys.length)];\r\n  return { ...TETROMINOES[rand], x: 3, y: 0 };\r\n};\r\n\r\nconst rotateMatrix = (matrix) => matrix[0].map((_, i) => matrix.map(row => row[i]).reverse());\r\n\r\nconst isValidMove = (shape, grid, offsetX, offsetY) => {\r\n  for (let y = 0; y < shape.length; y++) {\r\n    for (let x = 0; x < shape[y].length; x++) {\r\n      if (shape[y][x]) {\r\n        const newY = y + offsetY;\r\n        const newX = x + offsetX;\r\n        if (\r\n          newY >= ROWS ||\r\n          newX < 0 ||\r\n          newX >= COLS ||\r\n          (grid[newY] && grid[newY][newX])\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nconst mergeTetromino = (grid, tetromino) => {\r\n  const newGrid = grid.map(row => [...row]);\r\n  const { shape, x, y } = tetromino;\r\n  shape.forEach((row, dy) => {\r\n    row.forEach((val, dx) => {\r\n      if (val && y + dy < ROWS && x + dx >= 0) {\r\n        newGrid[y + dy][x + dx] = 1;\r\n      }\r\n    });\r\n  });\r\n  return newGrid;\r\n};\r\n\r\nconst clearLines = (grid) => {\r\n  const newGrid = grid.filter(row => row.some(cell => cell === 0));\r\n  const linesCleared = ROWS - newGrid.length;\r\n  while (newGrid.length < ROWS) newGrid.unshift(Array(COLS).fill(0));\r\n  return { grid: newGrid, linesCleared };\r\n};\r\n\r\nconst TetrisGame = ({ isDark }) => {\r\n  const canvasRef = useRef(null);\r\n  const [grid, setGrid] = useState(Array.from({ length: ROWS }, () => Array(COLS).fill(0)));\r\n  const [activeBlock, setActiveBlock] = useState(randomTetromino());\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n\r\n  const draw = (ctx) => {\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n    for (let y = 0; y < ROWS; y++) {\r\n      for (let x = 0; x < COLS; x++) {\r\n        if (grid[y][x]) {\r\n          ctx.fillStyle = \"#38bdf8\";\r\n          ctx.fillRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\r\n          ctx.strokeStyle = \"#1e3a8a\";\r\n          ctx.strokeRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\r\n        }\r\n      }\r\n    }\r\n    const { shape, x, y, color } = activeBlock;\r\n    shape.forEach((row, dy) => {\r\n      row.forEach((val, dx) => {\r\n        if (val) {\r\n          ctx.fillStyle = color;\r\n          ctx.fillRect((x + dx) * BLOCK_SIZE, (y + dy) * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\r\n          ctx.strokeStyle = \"#1e3a8a\";\r\n          ctx.strokeRect((x + dx) * BLOCK_SIZE, (y + dy) * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    let lastTime = 0;\r\n    let dropInterval = 500;\r\n    let dropCounter = 0;\r\n\r\n    const update = (time = 0) => {\r\n      const deltaTime = time - lastTime;\r\n      lastTime = time;\r\n      dropCounter += deltaTime;\r\n\r\n      if (isRunning && !isPaused && dropCounter > dropInterval) {\r\n        const moved = { ...activeBlock, y: activeBlock.y + 1 };\r\n        if (isValidMove(moved.shape, grid, moved.x, moved.y)) {\r\n          setActiveBlock(moved);\r\n        } else {\r\n          const merged = mergeTetromino(grid, activeBlock);\r\n          const { grid: cleared } = clearLines(merged);\r\n          setGrid(cleared);\r\n          setActiveBlock(randomTetromino());\r\n        }\r\n        dropCounter = 0;\r\n      }\r\n\r\n      draw(ctx);\r\n      requestAnimationFrame(update);\r\n    };\r\n\r\n    requestAnimationFrame(update);\r\n  }, [isRunning, isPaused, activeBlock, grid]);\r\n\r\n  useEffect(() => {\r\n    const handleKey = (e) => {\r\n      if (!isRunning || isPaused) return;\r\n      let moved = { ...activeBlock };\r\n      if (e.key === \"ArrowLeft\" || e.key.toLowerCase() === \"a\") moved.x--;\r\n      else if (e.key === \"ArrowRight\" || e.key.toLowerCase() === \"d\") moved.x++;\r\n      else if (e.key === \"ArrowDown\" || e.key.toLowerCase() === \"s\") moved.y++;\r\n      else if (e.key === \"ArrowUp\" || e.key.toLowerCase() === \"w\") {\r\n        const rotated = rotateMatrix(activeBlock.shape);\r\n        if (isValidMove(rotated, grid, activeBlock.x, activeBlock.y)) {\r\n          setActiveBlock({ ...activeBlock, shape: rotated });\r\n          return;\r\n        }\r\n      }\r\n      if (isValidMove(moved.shape, grid, moved.x, moved.y)) setActiveBlock(moved);\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKey);\r\n    return () => window.removeEventListener(\"keydown\", handleKey);\r\n  }, [isRunning, isPaused, activeBlock, grid]);\r\n\r\n  const handleStart = () => {\r\n    setGrid(Array.from({ length: ROWS }, () => Array(COLS).fill(0)));\r\n    setActiveBlock(randomTetromino());\r\n    setIsRunning(true);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    if (isRunning) setIsPaused((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full px-4 pb-10 gap-y-4\">\r\n      <div className=\"flex gap-4 flex-wrap justify-center\">\r\n        <button\r\n          onClick={handleStart}\r\n          className={`px-2 py-1 rounded-md border text-white ${isRunning ? \"bg-slate-600\" : \"bg-green-600\"}`}\r\n        >\r\n          Start\r\n        </button>\r\n        <button\r\n          onClick={handlePause}\r\n          disabled={!isRunning}\r\n          className={`px-2 py-1 rounded-md border text-white ${isPaused ? \"bg-yellow-600\" : isDark ? \"bg-blue-600\" : \"bg-slate-600\"}`}\r\n        >\r\n          {isPaused ? \"Resume\" : \"Pause\"}\r\n        </button>\r\n      </div>\r\n\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={canvasWidth}\r\n        height={canvasHeight}\r\n        className=\"border border-slate-700 bg-black\"\r\n        style={{ imageRendering: \"pixelated\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TetrisGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}