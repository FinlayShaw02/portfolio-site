{"version":3,"file":"static/js/937.28a08963.chunk.js","mappings":"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","sources":["components/PongGame.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst canvasWidth = 600;\r\nconst canvasHeight = 400;\r\nconst paddleWidth = 10;\r\nconst paddleHeight = 60;\r\nconst ballSize = 10;\r\nconst playerSpeed = 7;\r\nconst baseSpeedX = 2;\r\nconst baseSpeedY = 1.5;\r\n\r\nconst PongGame = ({ isDark }) => {\r\n  const canvasRef = useRef(null);\r\n  const playerYRef = useRef(canvasHeight / 2 - paddleHeight / 2);\r\n  const aiYRef = useRef(canvasHeight / 2 - paddleHeight / 2);\r\n  const ballRef = useRef({ x: 0, y: 0, vx: 0, vy: 0 });\r\n  const playerScoreRef = useRef(0);\r\n  const aiScoreRef = useRef(0);\r\n  const speedMultiplierRef = useRef(1);\r\n  const lastTimeRef = useRef(0);\r\n  const keysPressed = useRef({ up: false, down: false });\r\n\r\n  const [difficulty, setDifficulty] = useState(\"easy\");\r\n  const difficultyRef = useRef(\"easy\");\r\n\r\n  const [paused, setPaused] = useState(false);\r\n  const pausedRef = useRef(false);\r\n\r\n  const [countdown, setCountdown] = useState(0);\r\n  const countdownRef = useRef(0);\r\n\r\n  const frameRate = 1000 / 60;\r\n\r\n  const resetBall = () => {\r\n    speedMultiplierRef.current = 1;\r\n    const directionX = Math.random() > 0.5 ? 1 : -1;\r\n    const directionY = Math.random() > 0.5 ? 1 : -1;\r\n    ballRef.current = {\r\n      x: canvasWidth / 2,\r\n      y: canvasHeight / 2,\r\n      vx: baseSpeedX * directionX,\r\n      vy: baseSpeedY * directionY,\r\n    };\r\n  };\r\n\r\n  const moveBall = () => {\r\n    const ball = ballRef.current;\r\n    ball.x += ball.vx;\r\n    ball.y += ball.vy;\r\n\r\n    if (ball.y <= 0 || ball.y + ballSize >= canvasHeight) {\r\n      ball.vy *= -1;\r\n    }\r\n\r\n    if (ball.x + ballSize < 0) {\r\n      aiScoreRef.current += 1;\r\n      resetBall();\r\n      return;\r\n    }\r\n\r\n    if (ball.x > canvasWidth) {\r\n      playerScoreRef.current += 1;\r\n      resetBall();\r\n      return;\r\n    }\r\n\r\n    const playerY = playerYRef.current;\r\n    const aiY = aiYRef.current;\r\n\r\n    if (\r\n      ball.x <= paddleWidth &&\r\n      ball.y + ballSize >= playerY &&\r\n      ball.y <= playerY + paddleHeight\r\n    ) {\r\n      speedMultiplierRef.current *= 1.1;\r\n      ball.vx = baseSpeedX * speedMultiplierRef.current;\r\n      ball.vy = Math.sign(ball.vy) * baseSpeedY * speedMultiplierRef.current;\r\n      ball.x = paddleWidth;\r\n    }\r\n\r\n    if (\r\n      ball.x + ballSize >= canvasWidth - paddleWidth &&\r\n      ball.y + ballSize >= aiY &&\r\n      ball.y <= aiY + paddleHeight\r\n    ) {\r\n      speedMultiplierRef.current *= 1.1;\r\n      ball.vx = -baseSpeedX * speedMultiplierRef.current;\r\n      ball.vy = Math.sign(ball.vy) * baseSpeedY * speedMultiplierRef.current;\r\n      ball.x = canvasWidth - paddleWidth - ballSize;\r\n    }\r\n  };\r\n\r\n  const moveAI = () => {\r\n    const ball = ballRef.current;\r\n    let targetY;\r\n\r\n    if (difficultyRef.current === \"easy\") {\r\n      const aiSpeed = 1.5;\r\n      if (ball.vx > 0 && ball.x > canvasWidth * 0.66) {\r\n        targetY = ball.y - paddleHeight / 2;\r\n        aiYRef.current = aiYRef.current < targetY\r\n          ? Math.min(aiYRef.current + aiSpeed, canvasHeight - paddleHeight)\r\n          : Math.max(aiYRef.current - aiSpeed, 0);\r\n      }\r\n    }\r\n\r\n    if (difficultyRef.current === \"hard\") {\r\n      const aiSpeed = 3.8;\r\n      const prediction = ball.y + ball.vy * 6;\r\n      targetY = prediction - paddleHeight / 2;\r\n      aiYRef.current = aiYRef.current < targetY\r\n        ? Math.min(aiYRef.current + aiSpeed, canvasHeight - paddleHeight)\r\n        : Math.max(aiYRef.current - aiSpeed, 0);\r\n    }\r\n  };\r\n\r\n  const handleHeldKeys = () => {\r\n    if (keysPressed.current.up) {\r\n      playerYRef.current = Math.max(playerYRef.current - playerSpeed, 0);\r\n    }\r\n    if (keysPressed.current.down) {\r\n      playerYRef.current = Math.min(playerYRef.current + playerSpeed, canvasHeight - paddleHeight);\r\n    }\r\n  };\r\n\r\n  const draw = (ctx) => {\r\n    const ball = ballRef.current;\r\n    const speedMult = speedMultiplierRef.current;\r\n\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    ctx.save();\r\n    ctx.shadowBlur = speedMult > 2 ? Math.min((speedMult - 1) * 8, 30) : 0;\r\n    ctx.shadowColor = speedMult > 2 ? \"#38bdf8\" : \"transparent\";\r\n    ctx.fillStyle = speedMult > 2.5 ? \"#38bdf8\" : \"white\";\r\n    ctx.fillRect(ball.x, ball.y, ballSize, ballSize);\r\n    ctx.restore();\r\n\r\n    ctx.fillStyle = \"#10b981\";\r\n    ctx.fillRect(0, playerYRef.current, paddleWidth, paddleHeight);\r\n\r\n    ctx.fillStyle = \"#f43f5e\";\r\n    ctx.fillRect(canvasWidth - paddleWidth, aiYRef.current, paddleWidth, paddleHeight);\r\n\r\n    ctx.fillStyle = \"#fff\";\r\n    ctx.font = \"12px monospace\";\r\n    ctx.fillText(`You: ${playerScoreRef.current}`, 20, 20);\r\n    ctx.fillText(`AI: ${aiScoreRef.current}`, canvasWidth - 80, 20);\r\n    ctx.fillText(`Speed x${speedMult.toFixed(2)}`, canvasWidth / 2 - 40, 40);\r\n    ctx.fillText(`Mode: ${difficultyRef.current.toUpperCase()}`, canvasWidth / 2 - 40, 20);\r\n\r\n    if (pausedRef.current && countdownRef.current === 0) {\r\n      ctx.fillStyle = \"#facc15\";\r\n      ctx.font = \"bold 14px monospace\";\r\n      ctx.fillText(\"PAUSED\", canvasWidth / 2 - 30, canvasHeight / 2);\r\n    }\r\n\r\n    if (countdownRef.current > 0) {\r\n      ctx.fillStyle = \"#facc15\";\r\n      ctx.font = \"bold 28px monospace\";\r\n      ctx.fillText(`${countdownRef.current}`, canvasWidth / 2 - 10, canvasHeight / 2);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetBall();\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const loop = (timestamp) => {\r\n      if (countdownRef.current === 0 && !pausedRef.current && timestamp - lastTimeRef.current >= frameRate) {\r\n        handleHeldKeys();\r\n        moveBall();\r\n        moveAI();\r\n        draw(ctx);\r\n        lastTimeRef.current = timestamp;\r\n      } else {\r\n        draw(ctx);\r\n      }\r\n      requestAnimationFrame(loop);\r\n    };\r\n\r\n    requestAnimationFrame(loop);\r\n\r\n    const togglePauseWithCountdown = () => {\r\n      const wasPaused = pausedRef.current;\r\n      const newPaused = !wasPaused;\r\n      pausedRef.current = newPaused;\r\n      setPaused(newPaused);\r\n\r\n      if (!newPaused) {\r\n        let count = 3;\r\n        setCountdown(count);\r\n        countdownRef.current = count;\r\n\r\n        const interval = setInterval(() => {\r\n          count -= 1;\r\n          setCountdown(count);\r\n          countdownRef.current = count;\r\n          if (count <= 0) clearInterval(interval);\r\n        }, 500);\r\n      }\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      if (key === \"w\" || key === \"arrowup\") keysPressed.current.up = true;\r\n      if (key === \"s\" || key === \"arrowdown\") keysPressed.current.down = true;\r\n      if (key === \"p\") togglePauseWithCountdown();\r\n    };\r\n\r\n    const handleKeyUp = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      if (key === \"w\" || key === \"arrowup\") keysPressed.current.up = false;\r\n      if (key === \"s\" || key === \"arrowdown\") keysPressed.current.down = false;\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full px-4 pb-10 gap-y-4\">\r\n      {/* Buttons */}\r\n      <div className=\"flex gap-4 flex-wrap justify-center\">\r\n        <button\r\n          onClick={() => {\r\n            setDifficulty(\"easy\");\r\n            difficultyRef.current = \"easy\";\r\n          }}\r\n          className={`px-2 py-1 text-sm rounded-md border text-white ${difficulty === \"easy\" ? \"bg-green-600\" : \"bg-slate-600\"}`}\r\n        >\r\n          Easy Mode\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setDifficulty(\"hard\");\r\n            difficultyRef.current = \"hard\";\r\n          }}\r\n          className={`px-2 py-1 text-sm rounded-md border text-white ${difficulty === \"hard\" ? \"bg-red-600\" : \"bg-slate-600\"}`}\r\n        >\r\n          Hard Mode\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            const newPaused = !pausedRef.current;\r\n            pausedRef.current = newPaused;\r\n            setPaused(newPaused);\r\n\r\n            if (!newPaused) {\r\n              let count = 3;\r\n              setCountdown(count);\r\n              countdownRef.current = count;\r\n\r\n              const interval = setInterval(() => {\r\n                count -= 1;\r\n                setCountdown(count);\r\n                countdownRef.current = count;\r\n                if (count <= 0) clearInterval(interval);\r\n              }, 500);\r\n            }\r\n          }}\r\n          className={`px-2 py-1 text-sm rounded-md border text-white ${paused ? \"bg-yellow-600\" : \"bg-blue-600\"}`}\r\n        >\r\n          {paused ? \"Resume\" : \"Pause\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Game Canvas */}\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={canvasWidth}\r\n        height={canvasHeight}\r\n        className=\"border border-slate-700 bg-black\"\r\n        style={{ imageRendering: \"pixelated\" }}\r\n      />\r\n\r\n      {/* Info Box */}\r\n      <div className={`max-w-md mt-4 p-4 rounded-md text-sm shadow transition-colors ${\r\n        isDark ? \"bg-slate-800 text-slate-200\" : \"bg-slate-100 text-slate-800\"\r\n      }`}>\r\n        <p className={`${isDark ? \"text-emerald-400\" : \"text-emerald-600\"} font-semibold`}>About Pong</p>\r\n        <p>\r\n          Classic Pong-style game. Control the left paddle to hit the ball past the AI paddle on the right.\r\n          Each rally makes the ball faster!\r\n        </p>\r\n        <p>\r\n          <span className={`${isDark ? \"text-white\" : \"text-black\"} font-semibold`}>Controls:</span>{\" \"}\r\n          Use <span className=\"font-mono\">W</span>/<span className=\"font-mono\">S</span> or{\" \"}\r\n          <span className=\"font-mono\">↑</span>/<span className=\"font-mono\">↓</span> to move. Press{\" \"}\r\n          <span className=\"font-mono\">P</span> or use the button to pause/resume.\r\n        </p>\r\n        <p>\r\n          <span className={`${isDark ? \"text-white\" : \"text-black\"} font-semibold`}>Modes:</span>{\" \"}\r\n          Easy lets you win. Hard uses predictive AI. Switch anytime.\r\n        </p>\r\n        <p>\r\n          <span className={`${isDark ? \"text-white\" : \"text-black\"} font-semibold`}>Goal:</span>{\" \"}\r\n          Score as many points as you can!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PongGame;\r\n"],"names":["canvasWidth","canvasHeight","paddleWidth","paddleHeight","ballSize","_ref","isDark","canvasRef","useRef","playerYRef","aiYRef","ballRef","x","y","vx","vy","playerScoreRef","aiScoreRef","speedMultiplierRef","lastTimeRef","keysPressed","up","down","difficulty","setDifficulty","useState","difficultyRef","paused","setPaused","pausedRef","countdown","setCountdown","countdownRef","frameRate","resetBall","current","directionX","Math","random","directionY","draw","ctx","ball","speedMult","clearRect","save","shadowBlur","min","shadowColor","fillStyle","fillRect","restore","font","fillText","concat","toFixed","toUpperCase","useEffect","getContext","loop","timestamp","max","moveBall","playerY","aiY","sign","moveAI","targetY","aiSpeed","requestAnimationFrame","handleKeyDown","e","key","toLowerCase","togglePauseWithCountdown","newPaused","count","interval","setInterval","clearInterval","handleKeyUp","window","addEventListener","removeEventListener","_jsxs","className","children","_jsx","onClick","ref","width","height","style","imageRendering"],"sourceRoot":""}